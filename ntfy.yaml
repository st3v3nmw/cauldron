apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ntfy-ingress
  namespace: ntfy
  annotations:
    cert-manager.io/cluster-issuer: lets-encrypt
spec:
  tls:
    - hosts:
        - ntfy.stephenmwangi.com
      secretName: lets-encrypt-private-key
  rules:
    - host: ntfy.stephenmwangi.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: ntfy-svc
                port:
                  number: 80
---
apiVersion: v1
kind: Service
metadata:
  name: ntfy-svc
  namespace: ntfy
spec:
  type: ClusterIP
  selector:
    name: ntfy
  ports:
    - port: 80
      targetPort: 80
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ntfy-pvc
  namespace: ntfy
spec:
  storageClassName: longhorn
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ntfy-config
  namespace: ntfy
data:
  server.yml: |
    base-url: https://ntfy.stephenmwangi.com

    attachment-cache-dir: "/var/cache/ntfy/attachments"
    attachment-total-size-limit: "500M"
    attachment-expiry-duration: "3h"

    auth-file: "/var/cache/ntfy/user.db"
    auth-default-access: "deny-all"
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ntfy
  namespace: ntfy
spec:
  selector:
    matchLabels:
      name: ntfy
  replicas: 1
  template:
    metadata:
      labels:
        name: ntfy
        namespace: ntfy
    spec:
      containers:
        - name: ntfy
          image: binwiederhier/ntfy:v2.9.0
          imagePullPolicy: IfNotPresent
          args:
            - "serve"
            - "--cache-file"
            - "/var/cache/ntfy/cache.db"
          ports:
            - containerPort: 80
              name: http
          volumeMounts:
            - name: config
              mountPath: "/etc/ntfy"
              readOnly: true
            - name: cache
              mountPath: "/var/cache/ntfy"
      restartPolicy: Always
      volumes:
        - name: config
          configMap:
            name: ntfy-config
        - name: cache
          persistentVolumeClaim:
            claimName: ntfy-pvc
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/hostname
                    operator: In
                    values:
                      - mars
